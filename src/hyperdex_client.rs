use hyperdex::*;
use libc::*;

/* automatically generated by rust-bindgen */

pub enum Struct_hyperdex_client { }
#[repr(C)]
pub struct Struct_hyperdex_client_attribute {
    pub attr: *const ::libc::c_char,
    pub value: *const ::libc::c_char,
    pub value_sz: size_t,
    pub datatype: Enum_hyperdatatype,
}

unsafe impl Send for Struct_hyperdex_client_attribute {}
unsafe impl Sync for Struct_hyperdex_client_attribute {}

#[repr(C)]
pub struct Struct_hyperdex_client_map_attribute {
    pub attr: *const ::libc::c_char,
    pub map_key: *const ::libc::c_char,
    pub map_key_sz: size_t,
    pub map_key_datatype: Enum_hyperdatatype,
    pub value: *const ::libc::c_char,
    pub value_sz: size_t,
    pub value_datatype: Enum_hyperdatatype,
}
#[repr(C)]
pub struct Struct_hyperdex_client_attribute_check {
    pub attr: *const ::libc::c_char,
    pub value: *const ::libc::c_char,
    pub value_sz: size_t,
    pub datatype: Enum_hyperdatatype,
    pub predicate: Enum_hyperpredicate,
}
pub type Enum_hyperdex_client_returncode = ::libc::c_uint;
pub static HYPERDEX_CLIENT_SUCCESS: ::libc::c_uint = 8448;
pub static HYPERDEX_CLIENT_NOTFOUND: ::libc::c_uint = 8449;
pub static HYPERDEX_CLIENT_SEARCHDONE: ::libc::c_uint = 8450;
pub static HYPERDEX_CLIENT_CMPFAIL: ::libc::c_uint = 8451;
pub static HYPERDEX_CLIENT_READONLY: ::libc::c_uint = 8452;
pub static HYPERDEX_CLIENT_UNKNOWNSPACE: ::libc::c_uint = 8512;
pub static HYPERDEX_CLIENT_COORDFAIL: ::libc::c_uint = 8513;
pub static HYPERDEX_CLIENT_SERVERERROR: ::libc::c_uint = 8514;
pub static HYPERDEX_CLIENT_POLLFAILED: ::libc::c_uint = 8515;
pub static HYPERDEX_CLIENT_OVERFLOW: ::libc::c_uint = 8516;
pub static HYPERDEX_CLIENT_RECONFIGURE: ::libc::c_uint = 8517;
pub static HYPERDEX_CLIENT_TIMEOUT: ::libc::c_uint = 8519;
pub static HYPERDEX_CLIENT_UNKNOWNATTR: ::libc::c_uint = 8520;
pub static HYPERDEX_CLIENT_DUPEATTR: ::libc::c_uint = 8521;
pub static HYPERDEX_CLIENT_NONEPENDING: ::libc::c_uint = 8523;
pub static HYPERDEX_CLIENT_DONTUSEKEY: ::libc::c_uint = 8524;
pub static HYPERDEX_CLIENT_WRONGTYPE: ::libc::c_uint = 8525;
pub static HYPERDEX_CLIENT_NOMEM: ::libc::c_uint = 8526;
pub static HYPERDEX_CLIENT_INTERRUPTED: ::libc::c_uint = 8530;
pub static HYPERDEX_CLIENT_CLUSTER_JUMP: ::libc::c_uint = 8531;
pub static HYPERDEX_CLIENT_OFFLINE: ::libc::c_uint = 8533;
pub static HYPERDEX_CLIENT_INTERNAL: ::libc::c_uint = 8573;
pub static HYPERDEX_CLIENT_EXCEPTION: ::libc::c_uint = 8574;
pub static HYPERDEX_CLIENT_GARBAGE: ::libc::c_uint = 8575;
#[link(name = "hyperdex-client")]
extern "C" {
    pub fn hyperdex_client_create(coordinator: *const ::libc::c_char,
                                  port: uint16_t) ->
     *mut Struct_hyperdex_client;
    pub fn hyperdex_client_create_conn_str(conn_str: *const ::libc::c_char) ->
     *mut Struct_hyperdex_client;
    pub fn hyperdex_client_destroy(client: *mut Struct_hyperdex_client);
    pub fn hyperdex_client_get(client: *mut Struct_hyperdex_client,
                               space: *const ::libc::c_char,
                               key: *const ::libc::c_char, key_sz: size_t,
                               status: *mut Enum_hyperdex_client_returncode,
                               attrs:
                                   *mut *const Struct_hyperdex_client_attribute,
                               attrs_sz: *mut size_t) -> int64_t;
    pub fn hyperdex_client_get_partial(client: *mut Struct_hyperdex_client,
                                       space: *const ::libc::c_char,
                                       key: *const ::libc::c_char,
                                       key_sz: size_t,
                                       attrnames: *mut *const ::libc::c_char,
                                       attrnames_sz: size_t,
                                       status:
                                           *mut Enum_hyperdex_client_returncode,
                                       attrs:
                                           *mut *const Struct_hyperdex_client_attribute,
                                       attrs_sz: *mut size_t) -> int64_t;
    pub fn hyperdex_client_put(client: *mut Struct_hyperdex_client,
                               space: *const ::libc::c_char,
                               key: *const ::libc::c_char, key_sz: size_t,
                               attrs: *const Struct_hyperdex_client_attribute,
                               attrs_sz: size_t,
                               status: *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_put(client: *mut Struct_hyperdex_client,
                                    space: *const ::libc::c_char,
                                    key: *const ::libc::c_char,
                                    key_sz: size_t,
                                    checks:
                                        *const Struct_hyperdex_client_attribute_check,
                                    checks_sz: size_t,
                                    attrs:
                                        *const Struct_hyperdex_client_attribute,
                                    attrs_sz: size_t,
                                    status:
                                        *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_put_if_not_exist(client:
                                                *mut Struct_hyperdex_client,
                                            space: *const ::libc::c_char,
                                            key: *const ::libc::c_char,
                                            key_sz: size_t,
                                            attrs:
                                                *const Struct_hyperdex_client_attribute,
                                            attrs_sz: size_t,
                                            status:
                                                *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_del(client: *mut Struct_hyperdex_client,
                               space: *const ::libc::c_char,
                               key: *const ::libc::c_char, key_sz: size_t,
                               status: *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_del(client: *mut Struct_hyperdex_client,
                                    space: *const ::libc::c_char,
                                    key: *const ::libc::c_char,
                                    key_sz: size_t,
                                    checks:
                                        *const Struct_hyperdex_client_attribute_check,
                                    checks_sz: size_t,
                                    status:
                                        *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_add(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_add(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_sub(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_sub(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_mul(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_mul(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_div(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_div(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_mod(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_mod(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_and(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_and(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_or(client: *mut Struct_hyperdex_client,
                                     space: *const ::libc::c_char,
                                     key: *const ::libc::c_char,
                                     key_sz: size_t,
                                     attrs:
                                         *const Struct_hyperdex_client_attribute,
                                     attrs_sz: size_t,
                                     status:
                                         *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_or(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          checks:
                                              *const Struct_hyperdex_client_attribute_check,
                                          checks_sz: size_t,
                                          attrs:
                                              *const Struct_hyperdex_client_attribute,
                                          attrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_atomic_xor(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_atomic_xor(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_string_prepend(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          attrs:
                                              *const Struct_hyperdex_client_attribute,
                                          attrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_string_prepend(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               attrs:
                                                   *const Struct_hyperdex_client_attribute,
                                               attrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_string_append(client: *mut Struct_hyperdex_client,
                                         space: *const ::libc::c_char,
                                         key: *const ::libc::c_char,
                                         key_sz: size_t,
                                         attrs:
                                             *const Struct_hyperdex_client_attribute,
                                         attrs_sz: size_t,
                                         status:
                                             *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_string_append(client:
                                                  *mut Struct_hyperdex_client,
                                              space: *const ::libc::c_char,
                                              key: *const ::libc::c_char,
                                              key_sz: size_t,
                                              checks:
                                                  *const Struct_hyperdex_client_attribute_check,
                                              checks_sz: size_t,
                                              attrs:
                                                  *const Struct_hyperdex_client_attribute,
                                              attrs_sz: size_t,
                                              status:
                                                  *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_list_lpush(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_list_lpush(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_list_rpush(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_list_rpush(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_set_add(client: *mut Struct_hyperdex_client,
                                   space: *const ::libc::c_char,
                                   key: *const ::libc::c_char, key_sz: size_t,
                                   attrs:
                                       *const Struct_hyperdex_client_attribute,
                                   attrs_sz: size_t,
                                   status:
                                       *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_set_add(client: *mut Struct_hyperdex_client,
                                        space: *const ::libc::c_char,
                                        key: *const ::libc::c_char,
                                        key_sz: size_t,
                                        checks:
                                            *const Struct_hyperdex_client_attribute_check,
                                        checks_sz: size_t,
                                        attrs:
                                            *const Struct_hyperdex_client_attribute,
                                        attrs_sz: size_t,
                                        status:
                                            *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_set_remove(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_set_remove(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_set_intersect(client: *mut Struct_hyperdex_client,
                                         space: *const ::libc::c_char,
                                         key: *const ::libc::c_char,
                                         key_sz: size_t,
                                         attrs:
                                             *const Struct_hyperdex_client_attribute,
                                         attrs_sz: size_t,
                                         status:
                                             *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_set_intersect(client:
                                                  *mut Struct_hyperdex_client,
                                              space: *const ::libc::c_char,
                                              key: *const ::libc::c_char,
                                              key_sz: size_t,
                                              checks:
                                                  *const Struct_hyperdex_client_attribute_check,
                                              checks_sz: size_t,
                                              attrs:
                                                  *const Struct_hyperdex_client_attribute,
                                              attrs_sz: size_t,
                                              status:
                                                  *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_set_union(client: *mut Struct_hyperdex_client,
                                     space: *const ::libc::c_char,
                                     key: *const ::libc::c_char,
                                     key_sz: size_t,
                                     attrs:
                                         *const Struct_hyperdex_client_attribute,
                                     attrs_sz: size_t,
                                     status:
                                         *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_set_union(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          checks:
                                              *const Struct_hyperdex_client_attribute_check,
                                          checks_sz: size_t,
                                          attrs:
                                              *const Struct_hyperdex_client_attribute,
                                          attrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_add(client: *mut Struct_hyperdex_client,
                                   space: *const ::libc::c_char,
                                   key: *const ::libc::c_char, key_sz: size_t,
                                   mapattrs:
                                       *const Struct_hyperdex_client_map_attribute,
                                   mapattrs_sz: size_t,
                                   status:
                                       *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_add(client: *mut Struct_hyperdex_client,
                                        space: *const ::libc::c_char,
                                        key: *const ::libc::c_char,
                                        key_sz: size_t,
                                        checks:
                                            *const Struct_hyperdex_client_attribute_check,
                                        checks_sz: size_t,
                                        mapattrs:
                                            *const Struct_hyperdex_client_map_attribute,
                                        mapattrs_sz: size_t,
                                        status:
                                            *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_remove(client: *mut Struct_hyperdex_client,
                                      space: *const ::libc::c_char,
                                      key: *const ::libc::c_char,
                                      key_sz: size_t,
                                      attrs:
                                          *const Struct_hyperdex_client_attribute,
                                      attrs_sz: size_t,
                                      status:
                                          *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_remove(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           key: *const ::libc::c_char,
                                           key_sz: size_t,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           attrs:
                                               *const Struct_hyperdex_client_attribute,
                                           attrs_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_add(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_add(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_sub(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_sub(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_mul(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_mul(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_div(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_div(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_mod(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_mod(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_and(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_and(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_or(client: *mut Struct_hyperdex_client,
                                         space: *const ::libc::c_char,
                                         key: *const ::libc::c_char,
                                         key_sz: size_t,
                                         mapattrs:
                                             *const Struct_hyperdex_client_map_attribute,
                                         mapattrs_sz: size_t,
                                         status:
                                             *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_or(client:
                                                  *mut Struct_hyperdex_client,
                                              space: *const ::libc::c_char,
                                              key: *const ::libc::c_char,
                                              key_sz: size_t,
                                              checks:
                                                  *const Struct_hyperdex_client_attribute_check,
                                              checks_sz: size_t,
                                              mapattrs:
                                                  *const Struct_hyperdex_client_map_attribute,
                                              mapattrs_sz: size_t,
                                              status:
                                                  *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_atomic_xor(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          key: *const ::libc::c_char,
                                          key_sz: size_t,
                                          mapattrs:
                                              *const Struct_hyperdex_client_map_attribute,
                                          mapattrs_sz: size_t,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_atomic_xor(client:
                                                   *mut Struct_hyperdex_client,
                                               space: *const ::libc::c_char,
                                               key: *const ::libc::c_char,
                                               key_sz: size_t,
                                               checks:
                                                   *const Struct_hyperdex_client_attribute_check,
                                               checks_sz: size_t,
                                               mapattrs:
                                                   *const Struct_hyperdex_client_map_attribute,
                                               mapattrs_sz: size_t,
                                               status:
                                                   *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_string_prepend(client:
                                                  *mut Struct_hyperdex_client,
                                              space: *const ::libc::c_char,
                                              key: *const ::libc::c_char,
                                              key_sz: size_t,
                                              mapattrs:
                                                  *const Struct_hyperdex_client_map_attribute,
                                              mapattrs_sz: size_t,
                                              status:
                                                  *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_string_prepend(client:
                                                       *mut Struct_hyperdex_client,
                                                   space:
                                                       *const ::libc::c_char,
                                                   key: *const ::libc::c_char,
                                                   key_sz: size_t,
                                                   checks:
                                                       *const Struct_hyperdex_client_attribute_check,
                                                   checks_sz: size_t,
                                                   mapattrs:
                                                       *const Struct_hyperdex_client_map_attribute,
                                                   mapattrs_sz: size_t,
                                                   status:
                                                       *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_map_string_append(client:
                                                 *mut Struct_hyperdex_client,
                                             space: *const ::libc::c_char,
                                             key: *const ::libc::c_char,
                                             key_sz: size_t,
                                             mapattrs:
                                                 *const Struct_hyperdex_client_map_attribute,
                                             mapattrs_sz: size_t,
                                             status:
                                                 *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_cond_map_string_append(client:
                                                      *mut Struct_hyperdex_client,
                                                  space:
                                                      *const ::libc::c_char,
                                                  key: *const ::libc::c_char,
                                                  key_sz: size_t,
                                                  checks:
                                                      *const Struct_hyperdex_client_attribute_check,
                                                  checks_sz: size_t,
                                                  mapattrs:
                                                      *const Struct_hyperdex_client_map_attribute,
                                                  mapattrs_sz: size_t,
                                                  status:
                                                      *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_search(client: *mut Struct_hyperdex_client,
                                  space: *const ::libc::c_char,
                                  checks:
                                      *const Struct_hyperdex_client_attribute_check,
                                  checks_sz: size_t,
                                  status:
                                      *mut Enum_hyperdex_client_returncode,
                                  attrs:
                                      *mut *const Struct_hyperdex_client_attribute,
                                  attrs_sz: *mut size_t) -> int64_t;
    pub fn hyperdex_client_search_describe(client:
                                               *mut Struct_hyperdex_client,
                                           space: *const ::libc::c_char,
                                           checks:
                                               *const Struct_hyperdex_client_attribute_check,
                                           checks_sz: size_t,
                                           status:
                                               *mut Enum_hyperdex_client_returncode,
                                           description:
                                               *mut *const ::libc::c_char) ->
     int64_t;
    pub fn hyperdex_client_sorted_search(client: *mut Struct_hyperdex_client,
                                         space: *const ::libc::c_char,
                                         checks:
                                             *const Struct_hyperdex_client_attribute_check,
                                         checks_sz: size_t,
                                         sort_by: *const ::libc::c_char,
                                         limit: uint64_t,
                                         maxmin: ::libc::c_int,
                                         status:
                                             *mut Enum_hyperdex_client_returncode,
                                         attrs:
                                             *mut *const Struct_hyperdex_client_attribute,
                                         attrs_sz: *mut size_t) -> int64_t;
    pub fn hyperdex_client_group_del(client: *mut Struct_hyperdex_client,
                                     space: *const ::libc::c_char,
                                     checks:
                                         *const Struct_hyperdex_client_attribute_check,
                                     checks_sz: size_t,
                                     status:
                                         *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_count(client: *mut Struct_hyperdex_client,
                                 space: *const ::libc::c_char,
                                 checks:
                                     *const Struct_hyperdex_client_attribute_check,
                                 checks_sz: size_t,
                                 status: *mut Enum_hyperdex_client_returncode,
                                 count: *mut uint64_t) -> int64_t;
    pub fn hyperdex_client_loop(client: *mut Struct_hyperdex_client,
                                timeout: ::libc::c_int,
                                status: *mut Enum_hyperdex_client_returncode)
     -> int64_t;
    pub fn hyperdex_client_poll(client: *mut Struct_hyperdex_client) ->
     ::libc::c_int;
    pub fn hyperdex_client_block(client: *mut Struct_hyperdex_client,
                                 timeout: ::libc::c_int) -> ::libc::c_int;
    pub fn hyperdex_client_attribute_type(client: *mut Struct_hyperdex_client,
                                          space: *const ::libc::c_char,
                                          name: *const ::libc::c_char,
                                          status:
                                              *mut Enum_hyperdex_client_returncode)
     -> Enum_hyperdatatype;
    pub fn hyperdex_client_error_message(client: *mut Struct_hyperdex_client)
     -> *const ::libc::c_char;
    pub fn hyperdex_client_error_location(client: *mut Struct_hyperdex_client)
     -> *const ::libc::c_char;
    pub fn hyperdex_client_returncode_to_string(arg1:
                                                    Enum_hyperdex_client_returncode)
     -> *const ::libc::c_char;
    pub fn hyperdex_client_destroy_attrs(attrs:
                                             *const Struct_hyperdex_client_attribute,
                                         attrs_sz: size_t);
}
